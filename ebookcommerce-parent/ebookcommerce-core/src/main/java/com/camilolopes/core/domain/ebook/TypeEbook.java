package com.camilolopes.core.domain.ebook;

// Generated 28/08/2013 22:54:32 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import org.codehaus.jackson.annotate.JsonIgnore;


/**
 * TypeEbook generated by hbm2java
 */
@Entity
@Table(name = "type_ebook")
public class TypeEbook implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3733836683942586085L;
	private Integer id;
	private String description;
	private Set<Ebook> ebooks = new HashSet<Ebook>();

	public TypeEbook() {
	}

	public TypeEbook(String description, Set<Ebook> ebooks) {
		this.description = description;
		this.ebooks = ebooks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
	@JsonIgnore
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ebook_has_type_ebook", joinColumns = { @JoinColumn(name = "type_ebook_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ebook_id", nullable = false, updatable = false) })
	public Set<Ebook> getEbooks() {
		return this.ebooks;
	}

	public void setEbooks(Set<Ebook> ebooks) {
		this.ebooks = ebooks;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((description == null) ? 0 : description.hashCode());
		result = prime * result + ((ebooks == null) ? 0 : ebooks.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof TypeEbook))
			return false;
		TypeEbook other = (TypeEbook) obj;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (ebooks == null) {
			if (other.ebooks != null)
				return false;
		} else if (!ebooks.equals(other.ebooks))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}
